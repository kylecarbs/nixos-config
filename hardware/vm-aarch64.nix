# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/profiles/qemu-guest.nix")
      ../hosts/configuration.nix
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "virtio_pci" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # This won't work on other systems... it's hardcoded to my current M2's UUIDs.
  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/fd23d902-9741-4bfb-a1e6-1c5685a2e261";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/3F78-3D08";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s1.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";

  # Required for automating resizing with UTM.
  services.spice-vdagentd.enable = true;
  # The DPI has to be bigger for the smaller screen!
  services.xserver.dpi = 180;

  nixpkgs.overlays = [
    (import ../overlays/slack.nix)
  ];

  environment.systemPackages = with pkgs; [
    # Google Chrome isn't available on arm64
    chromium
    slack
  ];
  environment.variables.BROWSER = "chromium";
}
